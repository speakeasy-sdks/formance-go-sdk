// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorErrorCodeEnum string

const (
	ErrorErrorCodeEnumValidation ErrorErrorCodeEnum = "VALIDATION"
)

func (e ErrorErrorCodeEnum) ToPointer() *ErrorErrorCodeEnum {
	return &e
}

func (e *ErrorErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALIDATION":
		*e = ErrorErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorErrorCodeEnum: %s", s)
	}
}

// Error - General error
type Error struct {
	ErrorCode    ErrorErrorCodeEnum `json:"errorCode"`
	ErrorMessage string             `json:"errorMessage"`
}
