// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/formance-go-sdk/pkg/utils"
	"time"
)

type PaymentsAccountType string

const (
	PaymentsAccountTypeTarget PaymentsAccountType = "TARGET"
	PaymentsAccountTypeSource PaymentsAccountType = "SOURCE"
)

func (e PaymentsAccountType) ToPointer() *PaymentsAccountType {
	return &e
}

func (e *PaymentsAccountType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TARGET":
		fallthrough
	case "SOURCE":
		*e = PaymentsAccountType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentsAccountType: %v", v)
	}
}

type PaymentsAccount struct {
	CreatedAt time.Time           `json:"createdAt"`
	ID        string              `json:"id"`
	Provider  Connector           `json:"provider"`
	Reference string              `json:"reference"`
	Type      PaymentsAccountType `json:"type"`
}

func (p PaymentsAccount) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentsAccount) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaymentsAccount) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PaymentsAccount) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PaymentsAccount) GetProvider() Connector {
	if o == nil {
		return Connector("")
	}
	return o.Provider
}

func (o *PaymentsAccount) GetReference() string {
	if o == nil {
		return ""
	}
	return o.Reference
}

func (o *PaymentsAccount) GetType() PaymentsAccountType {
	if o == nil {
		return PaymentsAccountType("")
	}
	return o.Type
}
