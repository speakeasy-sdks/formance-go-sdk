// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PaymentsAccountTypeEnum string

const (
	PaymentsAccountTypeEnumTarget PaymentsAccountTypeEnum = "TARGET"
	PaymentsAccountTypeEnumSource PaymentsAccountTypeEnum = "SOURCE"
)

func (e PaymentsAccountTypeEnum) ToPointer() *PaymentsAccountTypeEnum {
	return &e
}

func (e *PaymentsAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TARGET":
		fallthrough
	case "SOURCE":
		*e = PaymentsAccountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentsAccountTypeEnum: %s", s)
	}
}

type PaymentsAccount struct {
	CreatedAt time.Time               `json:"createdAt"`
	ID        string                  `json:"id"`
	Provider  ConnectorEnum           `json:"provider"`
	Reference string                  `json:"reference"`
	Type      PaymentsAccountTypeEnum `json:"type"`
}
