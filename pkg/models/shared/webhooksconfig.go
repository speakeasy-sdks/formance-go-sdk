// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/formance-go-sdk/pkg/utils"
	"time"
)

type WebhooksConfig struct {
	Active     *bool      `json:"active,omitempty"`
	CreatedAt  *time.Time `json:"createdAt,omitempty"`
	Endpoint   *string    `json:"endpoint,omitempty"`
	EventTypes []string   `json:"eventTypes,omitempty"`
	ID         *string    `json:"id,omitempty"`
	Secret     *string    `json:"secret,omitempty"`
	UpdatedAt  *time.Time `json:"updatedAt,omitempty"`
}

func (w WebhooksConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhooksConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhooksConfig) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *WebhooksConfig) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *WebhooksConfig) GetEndpoint() *string {
	if o == nil {
		return nil
	}
	return o.Endpoint
}

func (o *WebhooksConfig) GetEventTypes() []string {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *WebhooksConfig) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WebhooksConfig) GetSecret() *string {
	if o == nil {
		return nil
	}
	return o.Secret
}

func (o *WebhooksConfig) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
