// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/formance-go-sdk/pkg/utils"
	"time"
)

type WorkflowOccurrence struct {
	CreatedAt  time.Time     `json:"createdAt"`
	ID         string        `json:"id"`
	Statuses   []StageStatus `json:"statuses"`
	UpdatedAt  time.Time     `json:"updatedAt"`
	WorkflowID string        `json:"workflowID"`
}

func (w WorkflowOccurrence) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowOccurrence) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowOccurrence) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *WorkflowOccurrence) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *WorkflowOccurrence) GetStatuses() []StageStatus {
	if o == nil {
		return []StageStatus{}
	}
	return o.Statuses
}

func (o *WorkflowOccurrence) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *WorkflowOccurrence) GetWorkflowID() string {
	if o == nil {
		return ""
	}
	return o.WorkflowID
}
