// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/formance-go-sdk/pkg/models/shared"
	"net/http"
)

type GetWorkflowOccurrenceRequest struct {
	// The flow id
	FlowID string `pathParam:"style=simple,explode=false,name=flowId"`
	// The occurrence id
	RunID string `pathParam:"style=simple,explode=false,name=runId"`
}

func (o *GetWorkflowOccurrenceRequest) GetFlowID() string {
	if o == nil {
		return ""
	}
	return o.FlowID
}

func (o *GetWorkflowOccurrenceRequest) GetRunID() string {
	if o == nil {
		return ""
	}
	return o.RunID
}

type GetWorkflowOccurrenceResponse struct {
	ContentType string
	// General error
	Error *shared.Error
	// The workflow occurrence
	GetWorkflowOccurrenceResponse *shared.GetWorkflowOccurrenceResponse
	StatusCode                    int
	RawResponse                   *http.Response
}

func (o *GetWorkflowOccurrenceResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetWorkflowOccurrenceResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *GetWorkflowOccurrenceResponse) GetGetWorkflowOccurrenceResponse() *shared.GetWorkflowOccurrenceResponse {
	if o == nil {
		return nil
	}
	return o.GetWorkflowOccurrenceResponse
}

func (o *GetWorkflowOccurrenceResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetWorkflowOccurrenceResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
